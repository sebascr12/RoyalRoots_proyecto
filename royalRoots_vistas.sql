ALTER SESSION SET CONTAINER = XEPDB1;

SHOW CON_NAME;

--vistas para reportes power bi
CREATE OR REPLACE VIEW FIDE_CLIENTES_POR_PROVINCIA_ESTADO_V AS
SELECT 
    P.PROVINCIA AS NOMBRE_PROVINCIA,
    E.DESCRIPCION AS ESTADO_CLIENTE,
    COUNT(C.ID_CLIENTE) AS TOTAL_CLIENTES
FROM FIDE_CLIENTES_TB C
JOIN FIDE_DIRECCION_TB D ON C.ID_DIRECCION = D.ID_DIRECCION
JOIN FIDE_PROVINCIA_TB P ON D.ID_PROVINCIA = P.ID_PROVINCIA
JOIN FIDE_ESTADO_TB E ON C.ID_ESTADO = E.ID_ESTADO
GROUP BY P.PROVINCIA, E.DESCRIPCION;


--cuenta los clientes registrados por cantón
CREATE OR REPLACE VIEW FIDE_CLIENTES_POR_CANTON_V AS
SELECT 
    CANT.CANTON AS NOMBRE_CANTON,
    COUNT(CLI.ID_CLIENTE) AS TOTAL_CLIENTES
FROM 
    FIDE_CLIENTES_TB CLI
    JOIN FIDE_DIRECCION_TB DIR ON CLI.ID_DIRECCION = DIR.ID_DIRECCION
    JOIN FIDE_CANTON_TB CANT ON DIR.ID_CANTON = CANT.ID_CANTON
WHERE 
    CLI.ID_ESTADO IN (
        SELECT ID_ESTADO FROM FIDE_ESTADO_TB WHERE UPPER(DESCRIPCION) IN ('ACTIVO', 'INACTIVO')
    )
GROUP BY 
    CANT.CANTON;

--cuenta cuantos clientes hay por distrito
CREATE OR REPLACE VIEW FIDE_CLIENTES_POR_DISTRITO_V AS
SELECT 
    D.DISTRITO AS NOMBRE_DISTRITO,
    E.DESCRIPCION AS ESTADO_CLIENTE,
    COUNT(C.ID_CLIENTE) AS TOTAL_CLIENTES
FROM 
    FIDE_CLIENTES_TB C
    JOIN FIDE_DIRECCION_TB DIR ON C.ID_DIRECCION = DIR.ID_DIRECCION
    JOIN FIDE_DISTRITO_TB D ON DIR.ID_DISTRITO = D.ID_DISTRITO
    JOIN FIDE_ESTADO_TB E ON C.ID_ESTADO = E.ID_ESTADO
WHERE 
    UPPER(E.DESCRIPCION) IN ('ACTIVO', 'INACTIVO')
GROUP BY 
    D.DISTRITO,
    E.DESCRIPCION;

--reporte general de direccion
CREATE OR REPLACE VIEW FIDE_CLIENTES_DIRECCION_RESUMEN_V AS
SELECT 
    P.PROVINCIA,
    C.CANTON,
    D.DISTRITO,
    E.DESCRIPCION AS ESTADO_CLIENTE,
    COUNT(CLI.ID_CLIENTE) AS TOTAL_CLIENTES
FROM 
    FIDE_CLIENTES_TB CLI
    JOIN FIDE_DIRECCION_TB DIR ON CLI.ID_DIRECCION = DIR.ID_DIRECCION
    JOIN FIDE_PROVINCIA_TB P ON DIR.ID_PROVINCIA = P.ID_PROVINCIA
    JOIN FIDE_CANTON_TB C ON DIR.ID_CANTON = C.ID_CANTON
    JOIN FIDE_DISTRITO_TB D ON DIR.ID_DISTRITO = D.ID_DISTRITO
    JOIN FIDE_ESTADO_TB E ON CLI.ID_ESTADO = E.ID_ESTADO
WHERE 
    UPPER(E.DESCRIPCION) IN ('ACTIVO', 'INACTIVO')
GROUP BY 
    P.PROVINCIA,
    C.CANTON,
    D.DISTRITO,
    E.DESCRIPCION;
    
    
--CUANTO SE HA FACTURADO EN TOTAL POR METODO DE PAGO
CREATE OR REPLACE VIEW FIDE_TOTAL_FACTURADO_POR_METODO_V AS
SELECT 
    MP.NOMBRE_METODO,
    SUM(F.TOTAL) AS MONTO_TOTAL
FROM 
    FIDE_FACTURAS_TB F
    JOIN FIDE_METODO_PAGO_TB MP ON F.ID_METODO_PAGO = MP.ID_METODO_PAGO
    JOIN FIDE_ESTADO_TB E ON F.ID_ESTADO = E.ID_ESTADO
WHERE 
    UPPER(E.DESCRIPCION) = 'ACTIVO'
GROUP BY 
    MP.NOMBRE_METODO;
    
--FACTURACION POR REGISTRO DE FECHA
CREATE OR REPLACE VIEW FIDE_TOTAL_FACTURADO_MENSUAL_V AS
SELECT 
    TO_CHAR(FECHA_EMISION, 'YYYY-MM') AS MES_ANIO,
    SUM(TOTAL) AS MONTO_TOTAL
FROM 
    FIDE_FACTURAS_TB F
    JOIN FIDE_ESTADO_TB E ON F.ID_ESTADO = E.ID_ESTADO
WHERE 
    UPPER(E.DESCRIPCION) = 'ACTIVO'
GROUP BY 
    TO_CHAR(FECHA_EMISION, 'YYYY-MM')
ORDER BY 
    MES_ANIO;


--CANTIDAD DE FACTURAS ACTIVAS O INACTIVAS
    
CREATE OR REPLACE VIEW FIDE_CANTIDAD_FACTURAS_POR_ESTADO_V AS
SELECT 
    E.DESCRIPCION AS ESTADO_FACTURA,
    COUNT(*) AS TOTAL_FACTURAS
FROM 
    FIDE_FACTURAS_TB F
    JOIN FIDE_ESTADO_TB E ON F.ID_ESTADO = E.ID_ESTADO
WHERE 
    UPPER(E.DESCRIPCION) NOT IN ('ANULADA')
GROUP BY 
    E.DESCRIPCION;
    
--VISTA ADMINISTRADORA PESTAÑA 2
CREATE OR REPLACE VIEW FIDE_FACTURAS_RESUMEN_ESTADO_V AS
SELECT
    EST.DESCRIPCION AS ESTADO_FACTURA,
    MP.NOMBRE_METODO AS METODO_PAGO,
    COUNT(F.ID_FACTURA) AS CANTIDAD_FACTURAS,
    SUM(F.TOTAL) AS TOTAL_FACTURADO
FROM 
    FIDE_FACTURAS_TB F
    JOIN FIDE_ESTADO_TB EST ON F.ID_ESTADO = EST.ID_ESTADO
    JOIN FIDE_METODO_PAGO_TB MP ON F.ID_METODO_PAGO = MP.ID_METODO_PAGO
GROUP BY 
    EST.DESCRIPCION,
    MP.NOMBRE_METODO;
    
    
--EVOLUCION MENSUAL DE INGRESOS
CREATE OR REPLACE VIEW FIDE_FACTURAS_MENSUAL_V AS
SELECT
    TO_CHAR(FECHA_EMISION, 'YYYY-MM') AS MES,
    SUM(TOTAL) AS TOTAL_MENSUAL
FROM FIDE_FACTURAS_TB
WHERE ID_ESTADO IN (SELECT ID_ESTADO FROM FIDE_ESTADO_TB WHERE UPPER(DESCRIPCION) = 'ACTIVO')
GROUP BY TO_CHAR(FECHA_EMISION, 'YYYY-MM')
ORDER BY MES;

--PRODUCTOS CON MAS INGRESOS
CREATE OR REPLACE VIEW FIDE_PRODUCTOS_TOP_V AS
SELECT
    P.NOMBRE_PRODUCTO,
    COUNT(DF.ID_PRODUCTO) AS CANTIDAD_VENDIDA,
    SUM(DF.SUBTOTAL) AS INGRESOS
FROM FIDE_DETALLE_FACTURAS_TB DF
JOIN FIDE_PRODUCTO_TB P ON DF.ID_PRODUCTO = P.ID_PRODUCTO
WHERE DF.ID_ESTADO IN (SELECT ID_ESTADO FROM FIDE_ESTADO_TB WHERE UPPER(DESCRIPCION) = 'ACTIVO')
GROUP BY P.NOMBRE_PRODUCTO
ORDER BY INGRESOS DESC;

--CUAL ES EL METODO DE PAGO PREFERIDO
CREATE OR REPLACE VIEW FIDE_METODOS_PAGO_RESUMEN_V AS
SELECT
    MP.NOMBRE_METODO,
    COUNT(F.ID_FACTURA) AS CANTIDAD,
    SUM(F.TOTAL) AS TOTAL_PAGADO
FROM FIDE_FACTURAS_TB F
JOIN FIDE_METODO_PAGO_TB MP ON F.ID_METODO_PAGO = MP.ID_METODO_PAGO
WHERE F.ID_ESTADO IN (SELECT ID_ESTADO FROM FIDE_ESTADO_TB WHERE UPPER(DESCRIPCION) = 'ACTIVO')
GROUP BY MP.NOMBRE_METODO;


--REPORTE EMPLEADOS
CREATE OR REPLACE VIEW FIDE_EMPLEADOS_REPORTE_EMPLEADOS_V AS
SELECT 
    e.ID_EMPLEADO,
    e.NOMBRE_EMPLEADO || ' ' || e.APELLIDO_EMPLEADO AS NOMBRE_COMPLETO,
    ef.NOMBRE_FUNCION AS CARGO,
    t.HORA_INICIO,
    t.HORA_FIN,
    e.SALARIO,
    e.FECHA_CONTRATACION,
    TRUNC(MONTHS_BETWEEN(SYSDATE, e.FECHA_CONTRATACION)/12) AS ANIOS_ANTIGUEDAD,
    es.DESCRIPCION AS ESTADO,
    COUNT(v.ID_EMPLEADO) AS DIAS_VACACIONES,
    COUNT(r.ID_EMPLEADO) AS RESERVAS_ATENDIDAS
FROM 
    FIDE_EMPLEADOS_TB e
JOIN 
    FIDE_EMPLEADOS_FUNCION_TB ef ON e.ID_FUNCION = ef.ID_FUNCION
JOIN 
    FIDE_TURNOS_TB t ON e.ID_TURNO = t.ID_TURNO
JOIN 
    FIDE_ESTADO_TB es ON e.ID_ESTADO = es.ID_ESTADO
LEFT JOIN 
    FIDE_VACACIONES_TB v ON e.ID_EMPLEADO = v.ID_EMPLEADO
LEFT JOIN 
    FIDE_RESERVAS_TB r ON e.ID_EMPLEADO = r.ID_EMPLEADO
GROUP BY 
    e.ID_EMPLEADO, e.NOMBRE_EMPLEADO, e.APELLIDO_EMPLEADO, ef.NOMBRE_FUNCION,
    t.HORA_INICIO, t.HORA_FIN, e.SALARIO, e.FECHA_CONTRATACION, es.DESCRIPCION;



